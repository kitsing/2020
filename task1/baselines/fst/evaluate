#!/bin/bash
# This script evaluates predictions.
# 
# In the first stage it applies `cut -f2` to extract predicted phonemes from
# the gold data, and then `paste` to combine this with the hypothesized
# phonemes. In the second stage it calls `evaluate.py`.

set -eou pipefail

# Flag parsing.

readonly FLAGS=(
    "gold_path"
    "hypo_path"
)
readonly LONGOPTS_STRING="$(printf "%s:," "${FLAGS[@]}")"
readonly OPTS=$(getopt                 \
    --name "$(basename "$0")"          \
    --options "i"                      \
    --longoptions "${LONGOPTS_STRING}" \
    -- "$@")
eval set --${OPTS}
while [ $# -gt 0 ]; do
    case "$1" in
        --gold_path)
            GOLD_PATH="$2"
            shift 2
            ;;
        --hypo_path)
            HYPO_PATH="$2"
            shift 2
            ;;
        -i)
            CUT_FLAG="-f1"
            NO_SPACE_FLAG=" --no-space"
            shift 1
            ;;
        *)
            break
            ;;
    esac
done

readonly CUT_FLAG="${CUT_FLAG:-f2}"
readonly NO_SPACE_FLAG="${NO_SPACE_FLAG:}"

main() {
    local -r EVALUATE_PATH="$(mktemp -u -t evaluate.XXXXXX.$$.tsv)"
    paste <(cut ${CUT_FLAG} ${GOLD_PATH}) <(cut ${CUT_FLAG} ${HYPO_PATH}) > "${EVALUATE_PATH}"
    # We hide the "incorrect predictions" logging.
    ../../evaluation/./evaluate.py "${NO_SPACE_FLAG}" "${EVALUATE_PATH}" 2>/dev/null
    rm -f "${EVALUATE_PATH}"
}

main
