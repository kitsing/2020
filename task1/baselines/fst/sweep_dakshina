#!/bin/bash

set -eou pipefail

readonly SEED=1917
readonly DAKSHINA_DATA=/export/b08/kitsing/dakshina/dakshina_dataset_v1.0
readonly DATA=../../data_dakshina
readonly RANDOM_STARTS=25

mkdir -p checkpoints-dakshina
mkdir -p ${DATA}

# python disambiguate.py --input-path-prefix ${DAKSHINA_DATA} --shuffle --seed 42 --output-path-prefix ${DATA}

for TRAIN_TSV in "${DATA}/train/"*"_train.tsv"; do
    DEV_TSV="${TRAIN_TSV//train/dev}"
    TEST_TSV="${TRAIN_TSV//train/test}"
    LANGUAGE="$(basename $TRAIN_TSV _train.tsv)"
    # Output symbols.
    cut -f2 "${TRAIN_TSV}" "${DEV_TSV}" \
        | ngramsymbols \
        > "${LANGUAGE}_phones.sym"
    # Alignments.

#    python ./align.py \
#        --seed="${SEED}" \
#        --random_starts="${RANDOM_STARTS}" \
#        --tsv_path="${TRAIN_TSV}" \
#        --output_token_type="${LANGUAGE}_phones.sym" \
#        --encoder_path="${LANGUAGE}.enc" \
#        --far_path="${LANGUAGE}.far"
    # Loops over LM orders from 3 (trigram) to 9. 
    for ORDER in $(seq 3 9); do
        # NGram model.
#        ./model \
#            --encoder_path="${LANGUAGE}.enc" \
#            --far_path="${LANGUAGE}.far" \
#            --fst_path="checkpoints-dakshina/${LANGUAGE}-${ORDER}.fst" \
#            --order="${ORDER}"
        # Evaluation.
#        ./predict \
#            --input_path="${DEV_TSV}" \
#            --fst_path="checkpoints-dakshina/${LANGUAGE}-${ORDER}.fst" \
#            --output_token_type="${LANGUAGE}_phones.sym" \
#            --output_path="${LANGUAGE}.txt"
#
#        ./evaluate \
#            --gold_path="${DEV_TSV}" \
#            --hypo_path="${LANGUAGE}.txt" \
#            > "checkpoints-dakshina/${LANGUAGE}-${ORDER}-dev.res"
#        ./predict \
#            --input_path="${TEST_TSV}" \
#            --fst_path="checkpoints-dakshina/${LANGUAGE}-${ORDER}.fst" \
#            --output_token_type="${LANGUAGE}_phones.sym" \
#            --output_path="${LANGUAGE}.txt"
#        ./evaluate \
#            --gold_path="${TEST_TSV}" \
#            --hypo_path="${LANGUAGE}.txt" \
#            > "checkpoints-dakshina/${LANGUAGE}-${ORDER}-test.res"

        ./predict \
            --input_path="${DEV_TSV}" \
            --fst_path="checkpoints-dakshina/${LANGUAGE}-${ORDER}.fst" \
            --input_token_type="${LANGUAGE}_phones.sym" \
            --output_path="${LANGUAGE}.txt.invert" \
            -i
        ./evaluate \
            --gold_path="${DEV_TSV}" \
            --hypo_path="${LANGUAGE}.txt.invert" \
            -i \
            > "checkpoints-dakshina/${LANGUAGE}-${ORDER}-dev.inv.res"
        ./predict \
            --input_path="${TEST_TSV}" \
            --fst_path="checkpoints-dakshina/${LANGUAGE}-${ORDER}.fst" \
            --input_token_type="${LANGUAGE}_phones.sym" \
            -i \
            --output_path="${LANGUAGE}.txt.test.invert"
        ./evaluate \
            --gold_path="${TEST_TSV}" \
            --hypo_path="${LANGUAGE}.txt.test.invert" \
            -i \
            > "checkpoints-dakshina/${LANGUAGE}-${ORDER}-test.inv.res"
    done
    rm "${LANGUAGE}_phones.sym" \
        "${LANGUAGE}.enc" \
        "${LANGUAGE}.far" \
        "${LANGUAGE}.txt"
done
